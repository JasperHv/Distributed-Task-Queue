version: "3.9"

services:
  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI (http://localhost:15672)
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tasknet

  # State Storage
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - tasknet

  # Coordinator (Leader election capable)
  coordinator:
    build: .
    container_name: coordinator
    command: npm run start:coordinator
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      NODE_ID: coordinator-1
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672
      REDIS_URL: redis://redis:6379
    networks:
      - tasknet

  # Worker 1
  worker-1:
    build: .
    container_name: worker-1
    command: npm run start:worker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      WORKER_ID: worker-1
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672
      REDIS_URL: redis://redis:6379
    networks:
      - tasknet

  # Worker 2
  worker-2:
    build: .
    container_name: worker-2
    command: npm run start:worker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      WORKER_ID: worker-2
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672
      REDIS_URL: redis://redis:6379
    networks:
      - tasknet

  # Worker 3
  worker-3:
    build: .
    container_name: worker-3
    command: npm run start:worker
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      WORKER_ID: worker-3
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672
      REDIS_URL: redis://redis:6379
    networks:
      - tasknet

  # Client API
  client:
    build: .
    container_name: client
    command: npm run start:client
    volumes:
      - .:/usr/src/app
    depends_on:
      - coordinator
    environment:
      NODE_ENV: development
      PORT: 3000
      RABBITMQ_URL: amqp://user:pass@rabbitmq:5672
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    networks:
      - tasknet

networks:
  tasknet:
    driver: bridge